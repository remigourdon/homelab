---
version: "3"

services:

  db:
    image: postgres:13
    container_name: paperless-db
    networks:
      - backend
    volumes:
      - nfs-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=paperless
      - POSTGRES_USER=paperless
      - POSTGRES_PASSWORD={{ paperless_postgres_password }}
    restart: unless-stopped

  redis:
    image: redis:6.0
    container_name: paperless-redis
    networks:
      - backend
    restart: unless-stopped

  app:
    image: ghcr.io/paperless-ngx/paperless-ngx:1.17.4
    container_name: paperless-app
    environment:
      - USERMAP_UID=1000
      - USERMAP_GID=1000
      - PAPERLESS_URL=https://paperless.docker.home.remigourdon.net
      - PAPERLESS_REDIS=redis://redis:6379
      - PAPERLESS_DBHOST=db
      - PAPERLESS_DBPASS={{ paperless_postgres_password }}
      - PAPERLESS_TIME_ZONE=America/New_York
      - PAPERLESS_CONSUMER_POLLING=30 # Disable inotify which doesn't work over NFS
      - PAPERLESS_OCR_LANGUAGE=eng
      - PAPERLESS_OCR_LANGUAGES=fr
      - PAPERLESS_SECRET_KEY={{ paperless_secret_key }}
    networks:
      - traefik
      - backend
    depends_on:
      - db
      - redis
    volumes:
      - nfs-data:/usr/src/paperless/data
      - nfs-media:/usr/src/paperless/media
      - nfs-export:/usr/src/paperless/export
      - nfs-consume:/usr/src/paperless/consume
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.{{ project_name }}.rule: Host(`{{ project_name }}.{{ project_domain }}`)
      traefik.http.routers.{{ project_name }}.entrypoints: websecure
      traefik.http.routers.{{ project_name }}.tls.certresolver: myresolver
    restart: unless-stopped

volumes:
  nfs-db:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ project_nfs_host }},soft,rw,tcp,nfsvers=4
      device: ":{{ project_nfs_root_dir }}/{{ project_name }}/db"
  nfs-data:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ project_nfs_host }},soft,rw,tcp,nfsvers=4
      device: ":{{ project_nfs_root_dir }}/{{ project_name }}/data"
  nfs-media:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ project_nfs_host }},soft,rw,tcp,nfsvers=4
      device: ":{{ project_nfs_root_dir }}/{{ project_name }}/media"
  nfs-export:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ project_nfs_host }},soft,rw,tcp,nfsvers=4
      device: ":{{ project_nfs_root_dir }}/{{ project_name }}/export"
  nfs-consume:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ project_nfs_host }},soft,rw,tcp,nfsvers=4
      device: ":{{ project_nfs_root_dir }}/{{ project_name }}/consume"

networks:
  traefik:
    external: true
  backend:
    external: false
